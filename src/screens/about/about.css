/* components.css - Custom component styles integrated with existing theme */

/* ========================================
   CONTACT CARD COMPONENTS
   ======================================== */

/*
 * Main contact card - exactly matches your original styling
 * Uses CSS custom properties from your root.css for theme consistency
 */
.contact-card {
  @apply max-w-md mx-auto rounded-xl overflow-hidden;
  background-color: var(--color-background);
  box-shadow: var(--shadow-lg);
}

/*
 * Contact card header with gradient
 * Preserves your exact gradient while allowing for theme integration
 */
.contact-card-header {
  @apply px-6 py-8;
  background: linear-gradient(
    to right,
    var(--color-primary),
    var(--color-accent)
  );
}

/*
 * Contact card body - maintains exact spacing from original
 */
.contact-card-body {
  @apply px-6 py-6 space-y-4;
}

/* ========================================
   PROFILE SECTION COMPONENTS
   ======================================== */

/*
 * Profile section container - exactly as original
 */
.contact-profile-section {
  @apply text-center;
}

/*
 * Profile avatar circle - maintains exact dimensions and styling
 */
.contact-profile-avatar {
  @apply w-20 h-20 rounded-full mx-auto mb-4 flex items-center justify-center;
  background-color: rgba(255, 255, 255, 0.2);
}

/*
 * Avatar text - preserves exact typography
 */
.contact-profile-avatar-text {
  @apply text-2xl font-bold text-white;
}

/*
 * Profile name - exactly as original
 */
.contact-profile-name {
  @apply text-2xl font-bold text-white mb-2;
}

/*
 * Profile subtitle - using theme color for consistency
 */
.contact-profile-subtitle {
  @apply text-blue-100;
}

/* ========================================
   CONTACT INFORMATION ROWS
   ======================================== */

/*
 * Contact row container - exactly preserves original flex layout
 */
.contact-info-row {
  @apply flex items-center space-x-3;
}

/*
 * Contact icon container - maintains exact styling
 */
.contact-info-icon {
  @apply w-10 h-10 rounded-full flex items-center justify-center flex-shrink-0;
  background-color: var(--color-surface);
}

/*
 * Contact icon text - using theme colors
 */
.contact-info-icon-text {
  @apply text-sm font-medium;
  color: var(--color-text-secondary);
}

/*
 * Contact info container - preserves exact flex behavior
 */
.contact-info-content {
  @apply flex-1 min-w-0;
}

/*
 * Contact label - using theme typography
 */
.contact-info-label {
  @apply text-sm font-medium;
  color: var(--color-text-primary);
}

/*
 * Contact link - enhanced with theme colors and exact transition
 */
.contact-info-link {
  @apply block cursor-pointer transition-colors duration-200;
  color: var(--color-primary);
}

.contact-info-link:hover {
  color: var(--color-primary-hover);
}

/* ========================================
   MESSAGE COMPONENTS WITH THEME INTEGRATION
   ======================================== */

/*
 * Base message container - using theme properties
 */
.message-container {
  @apply max-w-md mx-auto mt-8 p-6 rounded-lg;
  border: 1px solid var(--color-border);
}

/*
 * Warning message - maintains your exact yellow styling
 */
.message-warning {
  @apply message-container bg-yellow-50 border-yellow-200;
}

/*
 * Warning text - exactly as original but adaptable to dark theme
 */
.message-warning-text {
  @apply text-yellow-800;
}

/*
 * Error message - using theme-aware colors
 */
.message-error {
  @apply message-container;
  background-color: color-mix(
    in srgb,
    #fef2f2 90%,
    var(--color-background) 10%
  );
  border-color: #fecaca;
}

/*
 * Error text - theme-aware red
 */
.message-error-text {
  color: color-mix(in srgb, #991b1b 80%, var(--color-text-primary) 20%);
}

/* ========================================
   DEBUG AND UTILITY CLASSES
   ======================================== */

/*
 * Debug text - ensures visibility in both light and dark themes
 */
.debug-text {
  @apply text-sm;
  color: var(--color-text-primary);
}

/* ========================================
   LAYOUT COMPONENTS - SCREEN CONTAINERS
   ======================================== */

/*
 * Contact screen container - designed to work within existing layout hierarchy
 * Uses padding for spacing instead of trying to control viewport height
 * This respects the main-content container's height management
 */
.contact-screen-container {
  @apply py-8 px-4;
}

/*
 * Alternative screen container for components that need more generous spacing
 * Useful for screens with multiple content sections
 */
.screen-container-generous {
  @apply py-12 px-6;
}

/*
 * Minimal screen container for dense content layouts
 * Provides just enough breathing room without overwhelming the content
 */
.screen-container-minimal {
  @apply py-4 px-4;
}

/* ========================================
   CENTERED CONTENT CONTAINERS
   ======================================== */

/*
 * Error message container that works within any screen container
 * Uses relative positioning instead of trying to control overall layout
 */
.error-message-container {
  @apply max-w-md mx-auto mt-8 p-6 rounded-lg;
  background-color: color-mix(in srgb, #fef2f2 90%, var(--color-background) 10%);
  border: 1px solid #fecaca;
}

/*
 * Error message text with theme-aware coloring
 */
.error-message-text {
  color: color-mix(in srgb, #991b1b 80%, var(--color-text-primary) 20%);
}

/*
 * Generic centered content container for any type of primary content
 * Provides consistent width constraints and centering across the application
 */
.centered-content {
  @apply max-w-4xl mx-auto;
}

/* ========================================
   RESPONSIVE SPACING UTILITIES
   ======================================== */

/*
 * Responsive padding that adapts to screen size
 * Smaller padding on mobile, more generous on larger screens
 */
.responsive-container-padding {
  @apply px-4 py-6 sm:px-6 sm:py-8 lg:px-8 lg:py-12;
}

/*
 * Content spacing that maintains good rhythm across different screen sizes
 */
.content-spacing {
  @apply space-y-4 sm:space-y-6 lg:space-y-8;
}


