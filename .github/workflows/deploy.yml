name: Build and Push React Frontend

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'
        type: choice
        options:
          - prod
      tag_version:
        description: 'Custom tag version (e.g., v1.0.0)'
        required: true
        type: string

env:
  DOCKER_HUB_REPO: xilo/safehouse-frontend-main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Run linting
        run: npm run lint || true

      - name: Build application
        run: npm run build

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'workflow_dispatch'
    outputs:
      image: ${{ steps.meta.outputs.primary_tag }}
      all_tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate image tags
        id: meta
        run: |
          TAGS=""
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          CUSTOM_TAG="${{ github.event.inputs.tag_version }}"
          
          # Always tag with commit SHA
          TAGS="${TAGS}${{ env.DOCKER_HUB_REPO }}:${{ github.sha }},"
          
          # Tag based on environment
          if [[ "$ENVIRONMENT" == "prod" ]]; then
            TAGS="${TAGS}${{ env.DOCKER_HUB_REPO }}:latest,"
          elif [[ "$ENVIRONMENT" == "dev" ]]; then
            TAGS="${TAGS}${{ env.DOCKER_HUB_REPO }}:dev,"
          fi
          
          # Add custom tag if provided
          if [[ -n "$CUSTOM_TAG" ]]; then
            TAGS="${TAGS}${{ env.DOCKER_HUB_REPO }}:${CUSTOM_TAG},"
          fi
          
          # Remove trailing comma
          TAGS=${TAGS%,}
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "Generated tags: ${TAGS}"
          
          # Extract primary tag
          PRIMARY_TAG=$(echo $TAGS | cut -d',' -f1)
          echo "primary_tag=${PRIMARY_TAG}" >> $GITHUB_OUTPUT
          echo "Primary tag: ${PRIMARY_TAG}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            ENV=${{ github.event.inputs.environment }}
            BUILD_TIME=${{ github.run_number }}
            GIT_COMMIT=${{ github.sha }}

      - name: Output build summary
        run: |
          echo "## Frontend Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Custom Tag:** ${{ github.event.inputs.tag_version || 'None' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Built Images:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Primary Deployment Image:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.primary_tag }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Scan built image for vulnerabilities
        run: |
          IMAGE="${{ needs.build-and-push.outputs.image }}"
          
          echo "Scanning image: $IMAGE"
          echo "All built tags: ${{ needs.build-and-push.outputs.all_tags }}"
          
          # Trivy security scan
          echo "Running Trivy security scan..."
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image \
            --format table \
            --exit-code 0 \
            $IMAGE || echo "Trivy scan completed with findings"
          
          echo "Security scan completed for: $IMAGE"
